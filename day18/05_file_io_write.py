'''
io = input output

* 파일 입출력

- 프로그램이 생성한 정보를 좀 더 오래 저장할 때는 
  파일에 기록합니다.
- 메모리는 속도는 빠르지만 전원이 끊어지면 정보를 
  잃어버리기 때문에 하드디스크에
  저장해야 데이터를 오래 보관할 수 있습니다.
- 파일은 정보를 저장하는 기본단위이며 문서나, 
  이미지, 멀티미디어 자료도 모두 파일 형태로 
  보관할 수 있습니다.


- 파이썬에서 파일입출력을 할 때는 
  open()이라는 함수를 사용합니다.
  ex) open(파일경로, 모드)
- 파일 경로는 입출력 대상의 파일경로입니다.   
   디렉토리 경로를 포함합니다.
- 모드는 읽기("r"), 쓰기("w"), 추가("a") 등 무엇을 할지를 
  결정하는 인수입니다.
  
- 모드의 종류
1. r: 파일을 읽어들입니다. 읽어들일 파일이 없으면 
      예외가 발생합니다.
2. w: 파일에 데이터를 저장합니다. 
     파일이 이미 존재하면 덮어씁니다. 없으면 만듭니다
3. a: 파일에 데이터를 추가합니다.
'''


# 파일 저장 기능 (write)

# C드라이브에 py1530이라는 새 폴더를 만든다(폴더만 만듦)
file_path = r"C:\py1530\ringdingdong.txt" # r 안쓰면 탈출문자 처리 or \\ 로 써야됨

data = """링딩동 링딩동 링디기링디기 링딩동~~
링딩동 링딩동 링디기링디기 링딩동~~
링딩동 링딩동 링디기링디기 링딩동~~
링딩동 링딩동 링디기링디기 링딩동~~
야야야야야야야~~~~!!! 왜왜왜왜!!
오늘은 2022년 02월 22일(화)입니다"""


# f(변수이름 아무거나)= open(파일 경로, 모드) - f.write(입력할 내용) - f.close()

try:
    # 파일 입출력을 할 때는 내장함수 open()을 사용합니다.
    # 첫번째 인수로 파일 경로를, 두번째 인수로 모드를 설정.
    f = open(file_path, "w") # file_path 대신 r"C:\py1530\ringdingdong.txt" 라고 써도 됨
                             # 모드는 문자열("")로 
    # open이라는 내장함수가 <write 모드에 대한 정보> 그리고 <파일 경로에 대한 정보>를 가지고 있는 '파일 객체'를 return 하니까
    # 그 객체를 변수에 저장해야 우리는 그 변수를 통해 write의 기능, 메서드를 활용할 수 있다
    print(type(f)) # <class '_io.TextIOWrapper'>
    # 파일을 저장할 때는 파일 객체가 제공하는 write()메서드를 사용하여
    # 저장할 데이터를 인수로 전달합니다.
    f.write(data) # data를 write 해주세요, data는 그냥 직접 입력해도 되고 너무 길면 변수로 처리
    print("파일 저장이 완료되었습니다.")
except:
    print("지정한 경로가 올바르지 않습니다.")
finally:
    # 파일 입출력은 하드디스크에 접근하는 코드이므로
    # 반드시 메모리 자원을 반납하는 코드를 적어야합니다.
    f.close()


# data 바꾸면 덮어씌워진다, 바뀐다





