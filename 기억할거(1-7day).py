'''
day 3-1)
2진수, 8진수, 16진수
'''

'''
day 3-4)
C언어에서 연산자 우선순위
1순위) () , [] , -> , . (왼쪽부터 차례대로 우선순위 높다... ()가 1짱)
2순위) 연산자 항의 개수가 적을수록 먼저 실행 ex) !1||0 여기서 !은 단항연산자, ||은 2항연산자
따라서 단항연산자 먼저 실행돼서 !1||0 => 0||0 => 0
3순위) 산술 > 관계 > 논리 > 대입

A : 65, B = 66, C = 67 ...
a : 97, b = 98, c = 99 ...
가 : 44032  
- 대문자 < 소문자 < 한글
'''

'''
day 3-8)
# 반올림할 자리수를 선택하려면 함수의 2번째 값으로 자리수를 지정.
print(round(4.78, 1)) # 소수점 첫째자리까지 표현 -> 4.8
print(round(5.678912, 3)) # 소수점 셋째자리까지 표현 -> 5.679
'''

'''
day 4-3)
# print(end="\n", sep=" ", dog, "헬로") (X) 
# end, sep 순서는 상관 없지만 맨 뒤에 있어야 된다.
'''

'''
day 5-1)
* 단축 평가(short circuit) - and, or

- 논리 연산 수행시 좌항에서 전체결과가 판명날 경우
  우항 연산을 진행하지 않는 연산자입니다.

- and는 좌항에서 false가 나오면 우항과 무관하게 false
  or는 좌항에서 True가 나오면 우항과 무관하게 False

그럼 &, | 는 왜 쓰냐?
우항 논리식이 우리 프로그램의 중요한 코드일 때 쓴다
and, or 쓰면 쌩까버린다
'''

'''
day 6-2)
#n,x 값을 서로 바꾸는 과정
#     t = n   등호는 우측을 좌측에 대입하는 거다. 즉 좌측에는 무조건 이미 존재하는 변수가 와야된다
#     n = x
#     x = t
    n, x = x, n  # 위 과정을 간단히 한거. python에서만 가능.
'''

'''
day 6-3)
* 내장함수 range(begin, end, step) : 특정 범위의 순차적 리스트를 생성하는 함수

- 순차적으로 증가하는 정수 리스트를 만들 때 대괄호 안에 데이터를
  콤마로 일일히 나열하기보다는 range함수를 사용하여 쉽게 리스트를
   생성할 수 있습니다.

ex) range(시작값, 끝값, 증감값)
- 시작값은 포함하지만 끝값은 포함하지 않습니다.
*step이 1일 경우 생략 가능
- range(1, 5, 1) == range(1, 5) -> [1,2,3,4]
- range(3, 8, 2) -> [3,5,7]
*숫자 하나만 입력하면 그 값을 end로 보고 시작값을 0 으로 본다.
- range(6) == range(0,6,1)
'''

'''
day 7-1) 별문제들 다시보기
'''

