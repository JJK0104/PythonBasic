
'''
* 리스트의 요소(element) 다루기

- 리스트를 다룰 때는 문자열과 비슷한 방식을 사용합니다.
- 문자열도 문자들을 모아놓은 일종의 리스트입니다.
- 리스트는 인덱스를 통해 요소들을 관리합니다.
'''
names = ["최영희", "김철수", "강감찬", "홍길동"]

print(names[3]) # 홍길동
print(names[-2]) # 강감찬

print(type(names)) #list
print(type(names[1])) #str

print(names[1][0]) #문자열 인덱싱 -> names[1] == "김철수" -> names[1][0] == '김'
print(names[2][0:2]) #문자열 인덱싱
print(names[0].find("희")) #문자열 메서드 사용

# print(names.split()) split은 문자열 메서드, names는 list라서 오류뜬다

# 리스트 슬라이싱 -> 리스트데이터[begin:end:step]

nums = [0,1,2,3,4,5,6,7,8,9]

print(nums[2:5:1]) #2번 인덱스 이상 5번 인덱스 미만 한개씩 -> [2, 3, 4]
print(nums[:4]) #처음부터 4번 미만까지 -> [0, 1, 2, 3]
print(nums[6:]) #6번부터 끝까지 -> [6, 7, 8, 9]
print(nums[1:7:2]) #1번 이상 7번 미만 2개씩 건너뛰면서 -> [1, 3, 5]

# 리스트는 인덱싱을 통해 변수처럼 내부 요소를 변경할 수 있습니다.
print("-" * 40)
print(names) # ['최영희', '김철수', '강감찬', '홍길동']

names[2] = "이순신"
print(names) # ['최영희', '김철수', '이순신', '홍길동']

names[3] = nums[7] #nums[7]을 names[3]에 대입
print(names) # ['최영희', '김철수', '이순신', 7] 

'''
- 문자열은 상수형태로 저장되는 고정형 리스트입니다. 따라서 내부값 편집이 불가능
- 따라서 인덱싱을 통해 값을 사용하는 것은 가능하지만
  영역에 접근하여 내부 값을 변경할 수는 없습니다.
'''
print("-" * 40)

s1 = "python"
print(s1[2])
print(s1[2:5])

# s1[2] = "x"
print(s1)

# 리스트에 +, * 연산을 적용하면 문자열과 같은 결과가 나타납니다.
list1 = [1,2,3,4,5]
list2 = [10,11]

print(list1 + list2) # [1, 2, 3, 4, 5, 10, 11]
print(list2 + list1) # [10, 11, 1, 2, 3, 4, 5]
print(list2 * 3) # [10, 11, 10, 11, 10, 11]

# 비어있는 리스트 만들기
list1 = []
print(list1) # []

list2 = list()
print(list2) # []






